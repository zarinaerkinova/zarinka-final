import React, { useState } from 'react';
import { toast } from 'react-hot-toast';
import PhoneVerification from '../../components/PhoneVerification/PhoneVerification';
import { validatePhoneWithAPI, getPhoneInfo } from '../../utils/phoneValidation';
import './PhoneValidationDemo.scss';

const PhoneValidationDemo = () => {
    const [verifiedPhone, setVerifiedPhone] = useState('');
    const [isVerified, setIsVerified] = useState(false);
    const [testResults, setTestResults] = useState([]);
    const [loading, setLoading] = useState(false);

    const handleVerificationComplete = (phone, verified) => {
        setVerifiedPhone(phone);
        setIsVerified(verified);
        toast.success(`–ù–æ–º–µ—Ä ${phone} —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!`);
    };

    const testNumbers = [
        '+998901116659',
        '+998911234567',
        '+998331234567',
        '901116659',
        '998901116659',
        '+79991234567',
        'invalid-phone'
    ];

    const runBatchTest = async () => {
        setLoading(true);
        setTestResults([]);
        
        for (const phone of testNumbers) {
            try {
                const result = await validatePhoneWithAPI(phone, true);
                setTestResults(prev => [...prev, {
                    phone,
                    result,
                    timestamp: new Date().toLocaleTimeString()
                }]);
            } catch (error) {
                setTestResults(prev => [...prev, {
                    phone,
                    result: { success: false, error: error.message },
                    timestamp: new Date().toLocaleTimeString()
                }]);
            }
            
            // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            await new Promise(resolve => setTimeout(resolve, 500));
        }
        
        setLoading(false);
    };

    return (
        <div className="phone-validation-demo">
            <div className="demo-container">
                <header className="demo-header">
                    <h1>üì± –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤</h1>
                    <p>–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å NumLookupAPI –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤</p>
                </header>

                <div className="demo-sections">
                    {/* –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è */}
                    <section className="demo-section">
                        <h2>üîç –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è</h2>
                        <div className="verification-container">
                            <PhoneVerification
                                onVerificationComplete={handleVerificationComplete}
                                showInfo={true}
                                validationType="uzbek"
                                className="demo-phone-verification"
                            />
                        </div>
                        
                        {isVerified && (
                            <div className="verification-result">
                                <h3>‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏</h3>
                                <p><strong>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä:</strong> {verifiedPhone}</p>
                                <p><strong>–°—Ç–∞—Ç—É—Å:</strong> –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω</p>
                            </div>
                        )}
                    </section>

                    {/* –ú–∞—Å—Å–æ–≤–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ */}
                    <section className="demo-section">
                        <h2>üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤</h2>
                        <div className="batch-test-controls">
                            <button 
                                className="batch-test-btn"
                                onClick={runBatchTest}
                                disabled={loading}
                            >
                                {loading ? '‚è≥ –¢–µ—Å—Ç–∏—Ä—É–µ–º...' : 'üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç'}
                            </button>
                        </div>
                        
                        {testResults.length > 0 && (
                            <div className="test-results">
                                <h3>üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</h3>
                                <div className="results-grid">
                                    {testResults.map((test, index) => (
                                        <div key={index} className="result-card">
                                            <div className="result-header">
                                                <span className="phone-number">{test.phone}</span>
                                                <span className="timestamp">{test.timestamp}</span>
                                            </div>
                                            
                                            {test.result.success ? (
                                                <div className="result-success">
                                                    <div className="status-badge success">
                                                        ‚úÖ {test.result.data.isValid ? '–í–∞–ª–∏–¥–Ω—ã–π' : '–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π'}
                                                    </div>
                                                    
                                                    {test.result.data.apiVerification && (
                                                        <div className="api-info">
                                                            <p><strong>–§–æ—Ä–º–∞—Ç:</strong> {test.result.data.apiVerification.international_format}</p>
                                                            <p><strong>–°—Ç—Ä–∞–Ω–∞:</strong> {test.result.data.apiVerification.country_name}</p>
                                                            <p><strong>–û–ø–µ—Ä–∞—Ç–æ—Ä:</strong> {test.result.data.apiVerification.carrier}</p>
                                                            <p><strong>–¢–∏–ø:</strong> {test.result.data.apiVerification.line_type}</p>
                                                            <p><strong>–ê–∫—Ç–∏–≤–Ω—ã–π:</strong> {test.result.data.apiVerification.active ? '–î–∞' : '–ù–µ—Ç'}</p>
                                                            <p><strong>–†–∏—Å–∫:</strong> {test.result.data.fraudCheck?.riskScore || 0}%</p>
                                                        </div>
                                                    )}
                                                </div>
                                            ) : (
                                                <div className="result-error">
                                                    <div className="status-badge error">‚ùå –û—à–∏–±–∫–∞</div>
                                                    <p className="error-message">{test.result.error}</p>
                                                </div>
                                            )}
                                        </div>
                                    ))}
                                </div>
                            </div>
                        )}
                    </section>

                    {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± API */}
                    <section className="demo-section">
                        <h2>üìñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏</h2>
                        <div className="info-grid">
                            <div className="info-card">
                                <h3>üîß –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</h3>
                                <ul>
                                    <li>–í–∞–ª–∏–¥–∞—Ü–∏—è —É–∑–±–µ–∫—Å–∫–∏—Ö –∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤</li>
                                    <li>–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ —Å–≤—è–∑–∏</li>
                                    <li>–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –Ω–æ–º–µ—Ä–∞</li>
                                    <li>–û—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–∞ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞</li>
                                    <li>SMS –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è —Å –∫–æ–¥–æ–º</li>
                                    <li>–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ (+998XXXXXXXXX)</li>
                                </ul>
                            </div>

                            <div className="info-card">
                                <h3>üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h3>
                                <ul>
                                    <li>–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–æ–≤ –æ—Ç–ø—Ä–∞–≤–∫–∏ SMS</li>
                                    <li>–ê–Ω–∞–ª–∏–∑ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</li>
                                    <li>–ú–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ –≤ –ª–æ–≥–∞—Ö</li>
                                    <li>–ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ø–∞–º–∞ –∏ –±–æ—Ç–æ–≤</li>
                                    <li>–í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ —Å–µ—Ä–≤–µ—Ä–∞</li>
                                </ul>
                            </div>

                            <div className="info-card">
                                <h3>üåê API –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è</h3>
                                <ul>
                                    <li>NumLookupAPI –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏</li>
                                    <li>Fallback –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é</li>
                                    <li>–ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</li>
                                    <li>–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å–µ—Ç–∏</li>
                                    <li>–ì–∏–±–∫–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è</li>
                                </ul>
                            </div>
                        </div>
                    </section>
                </div>
            </div>
        </div>
    );
};

export default PhoneValidationDemo;